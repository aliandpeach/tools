package com.ews.exchange;

import java.util.*;

public class MessagePropertyPath extends ItemPropertyPath
{
    public static final UnindexedPropertyPath RECEIVED_TIME;
    public static final UnindexedPropertyPath IN_REPLY_TO;
    public static final UnindexedPropertyPath IS_SUBMITTED;
    public static final UnindexedPropertyPath IS_DRAFT;
    public static final UnindexedPropertyPath IS_FROM_ME;
    public static final UnindexedPropertyPath IS_RESEND;
    public static final UnindexedPropertyPath IS_UNMODIFIED;
    public static final UnindexedPropertyPath INTERNET_MESSAGE_HEADERS;
    public static final UnindexedPropertyPath SENT_TIME;
    public static final UnindexedPropertyPath RESPONSE_ITEMS;
    public static final UnindexedPropertyPath DISPLAY_CC;
    public static final UnindexedPropertyPath DISPLAY_TO;
    public static final UnindexedPropertyPath SENDER;
    public static final UnindexedPropertyPath TO_RECIPIENTS;
    public static final UnindexedPropertyPath CC_RECIPIENTS;
    public static final UnindexedPropertyPath BCC_RECIPIENTS;
    public static final UnindexedPropertyPath IS_READ_RECEIPT_REQUESTED;
    public static final UnindexedPropertyPath IS_DELIVERY_RECEIPT_REQUESTED;
    public static final UnindexedPropertyPath CONVERSATION_INDEX;
    public static final UnindexedPropertyPath CONVERSATION_TOPIC;
    public static final UnindexedPropertyPath FROM;
    public static final UnindexedPropertyPath INTERNET_MESSAGE_ID;
    public static final UnindexedPropertyPath IS_READ;
    public static final UnindexedPropertyPath IS_RESPONSE_REQUESTED;
    public static final UnindexedPropertyPath REFERENCES;
    public static final UnindexedPropertyPath REPLY_TO;
    public static final UnindexedPropertyPath RECEIVED_BY;
    public static final UnindexedPropertyPath RECEIVED_REPRESENTING;
    public static final PropertyTag LAST_VERB_EXECUTED;
    public static final PropertyTag IN_REPLY_TO_ID;
    public static final PropertyTag FLAG_STATUS;
    public static final PropertyTag FLAG_ICON;
    public static final PropertyTag FLAG_COMPLETE_TIME;
    public static final PropertyId FLAG_REQUEST;
    public static final PropertyId HIDE_ATTACHMENTS;
    public static final PropertyId VOTING_OPTIONS;
    public static final PropertyId VOTING_RESPONSE;
    public static final PropertyTag DEFERRED_DELIVERY_TIME;
    public static final PropertyTag DEFERRED_SEND_TIME;
    public static final PropertyId START_DATE;
    public static final PropertyId DUE_DATE;
    public static final PropertyTag MESSAGE_FLAGS;
    public static final PropertyTag BODY_RTF;
    
    public static List<PropertyPath> getAllPropertyPaths() {
        final ArrayList<PropertyPath> list = new ArrayList<PropertyPath>();
        for (int i = 0; i < ItemPropertyPath.getAllPropertyPaths().size(); ++i) {
            list.add((PropertyPath)ItemPropertyPath.getAllPropertyPaths().get(i));
        }
        list.add(MessagePropertyPath.MIME_CONTENT);
        list.add(MessagePropertyPath.REMINDER_DUE_BY);
        list.add(MessagePropertyPath.REMINDER_IS_SET);
        list.add(MessagePropertyPath.REMINDER_MINUTES_BEFORE_START);
        list.add(MessagePropertyPath.RECEIVED_TIME);
        list.add(MessagePropertyPath.IN_REPLY_TO);
        list.add(MessagePropertyPath.IS_SUBMITTED);
        list.add(MessagePropertyPath.IS_DRAFT);
        list.add(MessagePropertyPath.IS_FROM_ME);
        list.add(MessagePropertyPath.IS_RESEND);
        list.add(MessagePropertyPath.IS_UNMODIFIED);
        list.add(MessagePropertyPath.INTERNET_MESSAGE_HEADERS);
        list.add(MessagePropertyPath.SENT_TIME);
        list.add(MessagePropertyPath.RESPONSE_ITEMS);
        list.add(MessagePropertyPath.DISPLAY_CC);
        list.add(MessagePropertyPath.DISPLAY_TO);
        list.add(MessagePropertyPath.SENDER);
        list.add(MessagePropertyPath.TO_RECIPIENTS);
        list.add(MessagePropertyPath.CC_RECIPIENTS);
        list.add(MessagePropertyPath.BCC_RECIPIENTS);
        list.add(MessagePropertyPath.IS_READ_RECEIPT_REQUESTED);
        list.add(MessagePropertyPath.IS_DELIVERY_RECEIPT_REQUESTED);
        list.add(MessagePropertyPath.CONVERSATION_INDEX);
        list.add(MessagePropertyPath.CONVERSATION_TOPIC);
        list.add(MessagePropertyPath.FROM);
        list.add(MessagePropertyPath.INTERNET_MESSAGE_ID);
        list.add(MessagePropertyPath.IS_READ);
        list.add(MessagePropertyPath.IS_RESPONSE_REQUESTED);
        list.add(MessagePropertyPath.REFERENCES);
        list.add(MessagePropertyPath.REPLY_TO);
        list.add(MessagePropertyPath.LAST_VERB_EXECUTED);
        list.add(MessagePropertyPath.IN_REPLY_TO);
        list.add(MessagePropertyPath.FLAG_STATUS);
        list.add(MessagePropertyPath.FLAG_ICON);
        list.add(MessagePropertyPath.FLAG_COMPLETE_TIME);
        list.add(MessagePropertyPath.FLAG_REQUEST);
        list.add(MessagePropertyPath.HIDE_ATTACHMENTS);
        list.add(MessagePropertyPath.VOTING_OPTIONS);
        list.add(MessagePropertyPath.VOTING_RESPONSE);
        list.add(MessagePropertyPath.DEFERRED_DELIVERY_TIME);
        list.add(MessagePropertyPath.DEFERRED_SEND_TIME);
        list.add(MessagePropertyPath.START_DATE);
        list.add(MessagePropertyPath.DUE_DATE);
        list.add(MessagePropertyPath.MESSAGE_FLAGS);
        list.add(MessagePropertyPath.RECEIVED_BY);
        list.add(MessagePropertyPath.RECEIVED_REPRESENTING);
        list.add(MessagePropertyPath.BODY_RTF);
        return (List<PropertyPath>)list;
    }
    
    static {
        RECEIVED_TIME = new UnindexedPropertyPath("item:DateTimeReceived");
        IN_REPLY_TO = new UnindexedPropertyPath("item:InReplyTo");
        IS_SUBMITTED = new UnindexedPropertyPath("item:IsSubmitted");
        IS_DRAFT = new UnindexedPropertyPath("item:IsDraft");
        IS_FROM_ME = new UnindexedPropertyPath("item:IsFromMe");
        IS_RESEND = new UnindexedPropertyPath("item:IsResend");
        IS_UNMODIFIED = new UnindexedPropertyPath("item:IsUnmodified");
        INTERNET_MESSAGE_HEADERS = new UnindexedPropertyPath("item:InternetMessageHeaders");
        SENT_TIME = new UnindexedPropertyPath("item:DateTimeSent");
        RESPONSE_ITEMS = new UnindexedPropertyPath("item:ResponseObjects");
        DISPLAY_CC = new UnindexedPropertyPath("item:DisplayCc");
        DISPLAY_TO = new UnindexedPropertyPath("item:DisplayTo");
        SENDER = new UnindexedPropertyPath("message:Sender");
        TO_RECIPIENTS = new UnindexedPropertyPath("message:ToRecipients");
        CC_RECIPIENTS = new UnindexedPropertyPath("message:CcRecipients");
        BCC_RECIPIENTS = new UnindexedPropertyPath("message:BccRecipients");
        IS_READ_RECEIPT_REQUESTED = new UnindexedPropertyPath("message:IsReadReceiptRequested");
        IS_DELIVERY_RECEIPT_REQUESTED = new UnindexedPropertyPath("message:IsDeliveryReceiptRequested");
        CONVERSATION_INDEX = new UnindexedPropertyPath("message:ConversationIndex");
        CONVERSATION_TOPIC = new UnindexedPropertyPath("message:ConversationTopic");
        FROM = new UnindexedPropertyPath("message:From");
        INTERNET_MESSAGE_ID = new UnindexedPropertyPath("message:InternetMessageId");
        IS_READ = new UnindexedPropertyPath("message:IsRead");
        IS_RESPONSE_REQUESTED = new UnindexedPropertyPath("message:IsResponseRequested");
        REFERENCES = new UnindexedPropertyPath("message:References");
        REPLY_TO = new UnindexedPropertyPath("message:ReplyTo");
        RECEIVED_BY = new UnindexedPropertyPath("message:ReceivedBy");
        RECEIVED_REPRESENTING = new UnindexedPropertyPath("message:ReceivedRepresenting");
        LAST_VERB_EXECUTED = MapiPropertyTag.PR_LAST_VERB_EXECUTED;
        IN_REPLY_TO_ID = MapiPropertyTag.PR_IN_REPLY_TO_ID;
        FLAG_STATUS = MapiPropertyTag.PR_FLAG_STATUS;
        FLAG_ICON = MapiPropertyTag.PR_FLAG_ICON;
        FLAG_COMPLETE_TIME = MapiPropertyTag.PR_FLAG_COMPLETE;
        FLAG_REQUEST = new PropertyId(34096, StandardPropertySet.COMMON, MapiPropertyType.STRING);
        HIDE_ATTACHMENTS = new PropertyId(34068, StandardPropertySet.COMMON, MapiPropertyType.BOOLEAN);
        VOTING_OPTIONS = new PropertyId(34080, StandardPropertySet.COMMON, MapiPropertyType.BINARY);
        VOTING_RESPONSE = new PropertyId(34084, StandardPropertySet.COMMON, MapiPropertyType.STRING);
        DEFERRED_DELIVERY_TIME = MapiPropertyTag.PR_DEFERRED_DELIVERY_TIME;
        DEFERRED_SEND_TIME = MapiPropertyTag.PR_DEFERRED_SEND_TIME;
        START_DATE = new PropertyId(33028, StandardPropertySet.TASK, MapiPropertyType.SYSTEM_TIME);
        DUE_DATE = new PropertyId(33029, StandardPropertySet.TASK, MapiPropertyType.SYSTEM_TIME);
        MESSAGE_FLAGS = MapiPropertyTag.PR_MESSAGE_FLAGS;
        BODY_RTF = MapiPropertyTag.PR_RTF_COMPRESSED;
    }
}
